/* 
 * convertapi
 *
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Cloudmersive.APIClient.NET.DocumentAndDataConvert.Client;
using Cloudmersive.APIClient.NET.DocumentAndDataConvert.Api;
using Cloudmersive.APIClient.NET.DocumentAndDataConvert.Model;

namespace Cloudmersive.APIClient.NET.DocumentAndDataConvert.Test
{
    /// <summary>
    ///  Class for testing ConvertDocumentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ConvertDocumentApiTests
    {
        private ConvertDocumentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ConvertDocumentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ConvertDocumentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ConvertDocumentApi
            //Assert.IsInstanceOfType(typeof(ConvertDocumentApi), instance, "instance is a ConvertDocumentApi");
        }

        
        /// <summary>
        /// Test ConvertDocumentAutodetectGetInfo
        /// </summary>
        [Test]
        public void ConvertDocumentAutodetectGetInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentAutodetectGetInfo(inputFile);
            //Assert.IsInstanceOf<AutodetectGetInfoResult> (response, "response is AutodetectGetInfoResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentAutodetectToJpg
        /// </summary>
        [Test]
        public void ConvertDocumentAutodetectToJpgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? quality = null;
            //var response = instance.ConvertDocumentAutodetectToJpg(inputFile, quality);
            //Assert.IsInstanceOf<AutodetectToJpgResult> (response, "response is AutodetectToJpgResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentAutodetectToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentAutodetectToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentAutodetectToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentAutodetectToPdfBatchJob
        /// </summary>
        [Test]
        public void ConvertDocumentAutodetectToPdfBatchJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentAutodetectToPdfBatchJob(inputFile);
            //Assert.IsInstanceOf<ConvertDocumentBatchJobCreateResult> (response, "response is ConvertDocumentBatchJobCreateResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentAutodetectToPngArray
        /// </summary>
        [Test]
        public void ConvertDocumentAutodetectToPngArrayTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentAutodetectToPngArray(inputFile);
            //Assert.IsInstanceOf<AutodetectToPngResult> (response, "response is AutodetectToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentAutodetectToThumbnail
        /// </summary>
        [Test]
        public void ConvertDocumentAutodetectToThumbnailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? maxWidth = null;
            //int? maxHeight = null;
            //string extension = null;
            //var response = instance.ConvertDocumentAutodetectToThumbnail(inputFile, maxWidth, maxHeight, extension);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentAutodetectToThumbnailsAdvanced
        /// </summary>
        [Test]
        public void ConvertDocumentAutodetectToThumbnailsAdvancedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? pages = null;
            //int? maxWidth = null;
            //int? maxHeight = null;
            //string extension = null;
            //var response = instance.ConvertDocumentAutodetectToThumbnailsAdvanced(inputFile, pages, maxWidth, maxHeight, extension);
            //Assert.IsInstanceOf<AutodetectToThumbnailsResult> (response, "response is AutodetectToThumbnailsResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentAutodetectToTxt
        /// </summary>
        [Test]
        public void ConvertDocumentAutodetectToTxtTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //string textFormattingMode = null;
            //var response = instance.ConvertDocumentAutodetectToTxt(inputFile, textFormattingMode);
            //Assert.IsInstanceOf<TextConversionResult> (response, "response is TextConversionResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentCsvMultiToXlsx
        /// </summary>
        [Test]
        public void ConvertDocumentCsvMultiToXlsxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile1 = null;
            //System.IO.Stream inputFile2 = null;
            //System.IO.Stream inputFile3 = null;
            //System.IO.Stream inputFile4 = null;
            //System.IO.Stream inputFile5 = null;
            //System.IO.Stream inputFile6 = null;
            //System.IO.Stream inputFile7 = null;
            //System.IO.Stream inputFile8 = null;
            //System.IO.Stream inputFile9 = null;
            //System.IO.Stream inputFile10 = null;
            //string worksheetNames = null;
            //var response = instance.ConvertDocumentCsvMultiToXlsx(inputFile1, inputFile2, inputFile3, inputFile4, inputFile5, inputFile6, inputFile7, inputFile8, inputFile9, inputFile10, worksheetNames);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentCsvToHtml
        /// </summary>
        [Test]
        public void ConvertDocumentCsvToHtmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentCsvToHtml(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentCsvToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentCsvToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentCsvToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentCsvToXlsx
        /// </summary>
        [Test]
        public void ConvertDocumentCsvToXlsxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentCsvToXlsx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentDocToDocx
        /// </summary>
        [Test]
        public void ConvertDocumentDocToDocxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentDocToDocx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentDocToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentDocToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentDocToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentDocToTxt
        /// </summary>
        [Test]
        public void ConvertDocumentDocToTxtTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentDocToTxt(inputFile);
            //Assert.IsInstanceOf<TextConversionResult> (response, "response is TextConversionResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentDocxToDoc
        /// </summary>
        [Test]
        public void ConvertDocumentDocxToDocTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentDocxToDoc(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentDocxToHtml
        /// </summary>
        [Test]
        public void ConvertDocumentDocxToHtmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentDocxToHtml(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentDocxToJpg
        /// </summary>
        [Test]
        public void ConvertDocumentDocxToJpgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? quality = null;
            //var response = instance.ConvertDocumentDocxToJpg(inputFile, quality);
            //Assert.IsInstanceOf<DocxToJpgResult> (response, "response is DocxToJpgResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentDocxToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentDocxToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentDocxToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentDocxToPng
        /// </summary>
        [Test]
        public void ConvertDocumentDocxToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentDocxToPng(inputFile);
            //Assert.IsInstanceOf<DocxToPngResult> (response, "response is DocxToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentDocxToRtf
        /// </summary>
        [Test]
        public void ConvertDocumentDocxToRtfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentDocxToRtf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentDocxToTxt
        /// </summary>
        [Test]
        public void ConvertDocumentDocxToTxtTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //string textFormattingMode = null;
            //var response = instance.ConvertDocumentDocxToTxt(inputFile, textFormattingMode);
            //Assert.IsInstanceOf<TextConversionResult> (response, "response is TextConversionResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentEmlToHtml
        /// </summary>
        [Test]
        public void ConvertDocumentEmlToHtmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //bool? bodyOnly = null;
            //bool? includeAttachments = null;
            //var response = instance.ConvertDocumentEmlToHtml(inputFile, bodyOnly, includeAttachments);
            //Assert.IsInstanceOf<EmlToHtmlResult> (response, "response is EmlToHtmlResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentEmlToJpg
        /// </summary>
        [Test]
        public void ConvertDocumentEmlToJpgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? quality = null;
            //var response = instance.ConvertDocumentEmlToJpg(inputFile, quality);
            //Assert.IsInstanceOf<EmlToJpgResult> (response, "response is EmlToJpgResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentEmlToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentEmlToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //bool? bodyOnly = null;
            //var response = instance.ConvertDocumentEmlToPdf(inputFile, bodyOnly);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentEmlToPng
        /// </summary>
        [Test]
        public void ConvertDocumentEmlToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentEmlToPng(inputFile);
            //Assert.IsInstanceOf<EmlToPngResult> (response, "response is EmlToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentGetAsyncJobStatus
        /// </summary>
        [Test]
        public void ConvertDocumentGetAsyncJobStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string asyncJobID = null;
            //var response = instance.ConvertDocumentGetAsyncJobStatus(asyncJobID);
            //Assert.IsInstanceOf<ConvertDocumentJobStatusResult> (response, "response is ConvertDocumentJobStatusResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentGetFileTypeIcon
        /// </summary>
        [Test]
        public void ConvertDocumentGetFileTypeIconTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fileExtension = null;
            //int? iconSize = null;
            //var response = instance.ConvertDocumentGetFileTypeIcon(fileExtension, iconSize);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentGetFileTypeIconAdvanced
        /// </summary>
        [Test]
        public void ConvertDocumentGetFileTypeIconAdvancedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fileExtension = null;
            //int? iconSize = null;
            //var response = instance.ConvertDocumentGetFileTypeIconAdvanced(fileExtension, iconSize);
            //Assert.IsInstanceOf<GetFileTypeIconResult> (response, "response is GetFileTypeIconResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentHtmlToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentHtmlToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //bool? includeBackgroundGraphics = null;
            //int? scaleFactor = null;
            //var response = instance.ConvertDocumentHtmlToPdf(inputFile, includeBackgroundGraphics, scaleFactor);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentHtmlToPng
        /// </summary>
        [Test]
        public void ConvertDocumentHtmlToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentHtmlToPng(inputFile);
            //Assert.IsInstanceOf<PdfToPngResult> (response, "response is PdfToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentHtmlToTxt
        /// </summary>
        [Test]
        public void ConvertDocumentHtmlToTxtTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentHtmlToTxt(inputFile);
            //Assert.IsInstanceOf<TextConversionResult> (response, "response is TextConversionResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentKeynoteToJpg
        /// </summary>
        [Test]
        public void ConvertDocumentKeynoteToJpgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? quality = null;
            //var response = instance.ConvertDocumentKeynoteToJpg(inputFile, quality);
            //Assert.IsInstanceOf<KeynoteToJpgResult> (response, "response is KeynoteToJpgResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentKeynoteToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentKeynoteToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentKeynoteToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentKeynoteToPng
        /// </summary>
        [Test]
        public void ConvertDocumentKeynoteToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentKeynoteToPng(inputFile);
            //Assert.IsInstanceOf<KeynoteToPngResult> (response, "response is KeynoteToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentKeynoteToPptx
        /// </summary>
        [Test]
        public void ConvertDocumentKeynoteToPptxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentKeynoteToPptx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentMsgToHtml
        /// </summary>
        [Test]
        public void ConvertDocumentMsgToHtmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //bool? bodyOnly = null;
            //bool? includeAttachments = null;
            //var response = instance.ConvertDocumentMsgToHtml(inputFile, bodyOnly, includeAttachments);
            //Assert.IsInstanceOf<MsgToHtmlResult> (response, "response is MsgToHtmlResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentMsgToJpg
        /// </summary>
        [Test]
        public void ConvertDocumentMsgToJpgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? quality = null;
            //var response = instance.ConvertDocumentMsgToJpg(inputFile, quality);
            //Assert.IsInstanceOf<MsgToJpgResult> (response, "response is MsgToJpgResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentMsgToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentMsgToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //bool? bodyOnly = null;
            //var response = instance.ConvertDocumentMsgToPdf(inputFile, bodyOnly);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentMsgToPng
        /// </summary>
        [Test]
        public void ConvertDocumentMsgToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentMsgToPng(inputFile);
            //Assert.IsInstanceOf<MsgToPngResult> (response, "response is MsgToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdpToJpg
        /// </summary>
        [Test]
        public void ConvertDocumentOdpToJpgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? quality = null;
            //var response = instance.ConvertDocumentOdpToJpg(inputFile, quality);
            //Assert.IsInstanceOf<OdpToJpgResult> (response, "response is OdpToJpgResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdpToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentOdpToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentOdpToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdpToPng
        /// </summary>
        [Test]
        public void ConvertDocumentOdpToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentOdpToPng(inputFile);
            //Assert.IsInstanceOf<OdpToPngResult> (response, "response is OdpToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdpToPptx
        /// </summary>
        [Test]
        public void ConvertDocumentOdpToPptxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentOdpToPptx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdsToJpg
        /// </summary>
        [Test]
        public void ConvertDocumentOdsToJpgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? quality = null;
            //var response = instance.ConvertDocumentOdsToJpg(inputFile, quality);
            //Assert.IsInstanceOf<OdsToJpgResult> (response, "response is OdsToJpgResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdsToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentOdsToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentOdsToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdsToPng
        /// </summary>
        [Test]
        public void ConvertDocumentOdsToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentOdsToPng(inputFile);
            //Assert.IsInstanceOf<OdsToPngResult> (response, "response is OdsToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdsToXlsx
        /// </summary>
        [Test]
        public void ConvertDocumentOdsToXlsxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentOdsToXlsx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdtToDocx
        /// </summary>
        [Test]
        public void ConvertDocumentOdtToDocxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentOdtToDocx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdtToJpg
        /// </summary>
        [Test]
        public void ConvertDocumentOdtToJpgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? quality = null;
            //var response = instance.ConvertDocumentOdtToJpg(inputFile, quality);
            //Assert.IsInstanceOf<OdtToJpgResult> (response, "response is OdtToJpgResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdtToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentOdtToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentOdtToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentOdtToPng
        /// </summary>
        [Test]
        public void ConvertDocumentOdtToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentOdtToPng(inputFile);
            //Assert.IsInstanceOf<OdtToPngResult> (response, "response is OdtToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentPdfToDocx
        /// </summary>
        [Test]
        public void ConvertDocumentPdfToDocxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentPdfToDocx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentPdfToDocxRasterize
        /// </summary>
        [Test]
        public void ConvertDocumentPdfToDocxRasterizeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentPdfToDocxRasterize(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentPdfToJpg
        /// </summary>
        [Test]
        public void ConvertDocumentPdfToJpgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? quality = null;
            //var response = instance.ConvertDocumentPdfToJpg(inputFile, quality);
            //Assert.IsInstanceOf<PdfToJpgResult> (response, "response is PdfToJpgResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentPdfToPngArray
        /// </summary>
        [Test]
        public void ConvertDocumentPdfToPngArrayTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? dpi = null;
            //var response = instance.ConvertDocumentPdfToPngArray(inputFile, dpi);
            //Assert.IsInstanceOf<PdfToPngResult> (response, "response is PdfToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentPdfToPngArrayDirect
        /// </summary>
        [Test]
        public void ConvertDocumentPdfToPngArrayDirectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? dpi = null;
            //var response = instance.ConvertDocumentPdfToPngArrayDirect(inputFile, dpi);
            //Assert.IsInstanceOf<PdfToPngDirectResult> (response, "response is PdfToPngDirectResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentPdfToPngSingle
        /// </summary>
        [Test]
        public void ConvertDocumentPdfToPngSingleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentPdfToPngSingle(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentPdfToPptx
        /// </summary>
        [Test]
        public void ConvertDocumentPdfToPptxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentPdfToPptx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentPdfToTiff
        /// </summary>
        [Test]
        public void ConvertDocumentPdfToTiffTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? dpi = null;
            //bool? lzwCompression = null;
            //var response = instance.ConvertDocumentPdfToTiff(inputFile, dpi, lzwCompression);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentPdfToTxt
        /// </summary>
        [Test]
        public void ConvertDocumentPdfToTxtTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //string textFormattingMode = null;
            //var response = instance.ConvertDocumentPdfToTxt(inputFile, textFormattingMode);
            //Assert.IsInstanceOf<TextConversionResult> (response, "response is TextConversionResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentPngArrayToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentPngArrayToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile1 = null;
            //System.IO.Stream inputFile2 = null;
            //System.IO.Stream inputFile3 = null;
            //System.IO.Stream inputFile4 = null;
            //System.IO.Stream inputFile5 = null;
            //System.IO.Stream inputFile6 = null;
            //System.IO.Stream inputFile7 = null;
            //System.IO.Stream inputFile8 = null;
            //System.IO.Stream inputFile9 = null;
            //System.IO.Stream inputFile10 = null;
            //var response = instance.ConvertDocumentPngArrayToPdf(inputFile1, inputFile2, inputFile3, inputFile4, inputFile5, inputFile6, inputFile7, inputFile8, inputFile9, inputFile10);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentPngArrayToPdfFlattenTransparency
        /// </summary>
        [Test]
        public void ConvertDocumentPngArrayToPdfFlattenTransparencyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ConvertDocumentPngArrayToPdfFlattenTransparency();
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ConvertDocumentPptToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentPptToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentPptToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentPptToPptx
        /// </summary>
        [Test]
        public void ConvertDocumentPptToPptxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentPptToPptx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentPptxToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentPptxToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentPptxToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentPptxToPng
        /// </summary>
        [Test]
        public void ConvertDocumentPptxToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentPptxToPng(inputFile);
            //Assert.IsInstanceOf<PptxToPngResult> (response, "response is PptxToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentPptxToPpt
        /// </summary>
        [Test]
        public void ConvertDocumentPptxToPptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentPptxToPpt(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentPptxToTxt
        /// </summary>
        [Test]
        public void ConvertDocumentPptxToTxtTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentPptxToTxt(inputFile);
            //Assert.IsInstanceOf<TextConversionResult> (response, "response is TextConversionResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentRtfToDocx
        /// </summary>
        [Test]
        public void ConvertDocumentRtfToDocxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentRtfToDocx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentRtfToHtml
        /// </summary>
        [Test]
        public void ConvertDocumentRtfToHtmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentRtfToHtml(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentRtfToJpg
        /// </summary>
        [Test]
        public void ConvertDocumentRtfToJpgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? quality = null;
            //var response = instance.ConvertDocumentRtfToJpg(inputFile, quality);
            //Assert.IsInstanceOf<RtfToJpgResult> (response, "response is RtfToJpgResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentRtfToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentRtfToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentRtfToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentRtfToPng
        /// </summary>
        [Test]
        public void ConvertDocumentRtfToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentRtfToPng(inputFile);
            //Assert.IsInstanceOf<RtfToPngResult> (response, "response is RtfToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentTxtToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentTxtToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //int? scaleFactor = null;
            //var response = instance.ConvertDocumentTxtToPdf(inputFile, scaleFactor);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentXlsToCsv
        /// </summary>
        [Test]
        public void ConvertDocumentXlsToCsvTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentXlsToCsv(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentXlsToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentXlsToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentXlsToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentXlsToXlsx
        /// </summary>
        [Test]
        public void ConvertDocumentXlsToXlsxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentXlsToXlsx(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentXlsxToCsv
        /// </summary>
        [Test]
        public void ConvertDocumentXlsxToCsvTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //string outputEncoding = null;
            //var response = instance.ConvertDocumentXlsxToCsv(inputFile, outputEncoding);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentXlsxToCsvMulti
        /// </summary>
        [Test]
        public void ConvertDocumentXlsxToCsvMultiTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //string outputEncoding = null;
            //var response = instance.ConvertDocumentXlsxToCsvMulti(inputFile, outputEncoding);
            //Assert.IsInstanceOf<CsvCollection> (response, "response is CsvCollection");
        }
        
        /// <summary>
        /// Test ConvertDocumentXlsxToHtml
        /// </summary>
        [Test]
        public void ConvertDocumentXlsxToHtmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentXlsxToHtml(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentXlsxToPdf
        /// </summary>
        [Test]
        public void ConvertDocumentXlsxToPdfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentXlsxToPdf(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test ConvertDocumentXlsxToPng
        /// </summary>
        [Test]
        public void ConvertDocumentXlsxToPngTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentXlsxToPng(inputFile);
            //Assert.IsInstanceOf<XlsxToPngResult> (response, "response is XlsxToPngResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentXlsxToTxt
        /// </summary>
        [Test]
        public void ConvertDocumentXlsxToTxtTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentXlsxToTxt(inputFile);
            //Assert.IsInstanceOf<TextConversionResult> (response, "response is TextConversionResult");
        }
        
        /// <summary>
        /// Test ConvertDocumentXlsxToXls
        /// </summary>
        [Test]
        public void ConvertDocumentXlsxToXlsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //var response = instance.ConvertDocumentXlsxToXls(inputFile);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
    }

}
